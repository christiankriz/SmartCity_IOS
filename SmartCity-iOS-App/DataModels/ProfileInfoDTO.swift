

//SWIFT SKELETON CLASS: ProfileInfoDTO
//Generated by Java2Swift on Sat Apr 23 10:25:46 SAST 2016

import Foundation
import Gloss
import ObjectMapper

class ProfileInfoDTO: Decodable, Mappable {

	 init() { }
	// MARK: - Properties
	var profileInfoID: Int?
	var customerTypeID: Int?
	var countryID: Int?
	var iDNumber: String?
	var title: String?
	var firstName: String?
	var lastName: String?
	var cellNumber: String?
	var CustomerID: String?
	var email: String?
	var emailList: Array<String>?
	var password: String?
	var complaintList: Array<ComplaintDTO>?
	var municipalityID: Int?
	var accountList: Array<AccountDTO>?

	// MARK: - functions to conform to ObjectMapper protocol Mappable
	 required init?(_ map: Map) {
	}

	func mapping(map: Map) {
		profileInfoID <- map["profileInfoID"]
		customerTypeID <- map["customerTypeID"]
		CustomerID <- map["CustomerID"]
		countryID <- map["countryID"]
		iDNumber <- map["iDNumber"]
		title <- map["title"]
		firstName <- map["firstName"]
		lastName <- map["lastName"]
		cellNumber <- map["cellNumber"]
		email <- map["email"]
		emailList <- map["emailList"]
		password <- map["password"]
		complaintList <- map["complaintList"]
		municipalityID <- map["municipalityID"]
		accountList <- map["accountList"]
	}

	// MARK: - functions to conform to Decodable
	 required init?(json: JSON) {
		self.profileInfoID = "profileInfoID" <~~ json
		self.customerTypeID = "customerTypeID" <~~ json
		self.CustomerID = "CustomerID" <~~ json
		self.countryID = "countryID" <~~ json
		self.iDNumber = "iDNumber" <~~ json
		self.title = "title" <~~ json
		self.firstName = "firstName" <~~ json
		self.lastName = "lastName" <~~ json
		self.cellNumber = "cellNumber" <~~ json
		self.email = "email" <~~ json
		self.emailList = "emailList" <~~ json
		self.password = "password" <~~ json
		self.complaintList = "complaintList" <~~ json
		self.municipalityID = "municipalityID" <~~ json
		self.accountList = "accountList" <~~ json
	}
}

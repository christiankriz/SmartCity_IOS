

//SWIFT SKELETON CLASS: ComplaintTypeDTO
//Generated by Java2Swift on Sat Apr 23 10:25:46 SAST 2016

import Foundation
import Gloss
import ObjectMapper

class ComplaintTypeDTO: Decodable,Mappable {

    // MARK: - Properties
	var complaintTypeID: Int?
	var color: Int?
	var id: Int?
	var complaintTypeName: String?
	var categoryName: String?
	var locationIsRequired: Bool?
	var pictureRequired: Bool?
	var complaintList: Array<ComplaintDTO>?
	var complaintCategoryID: Int?

    // MARK: - functions to conform to ObjectMapper protocol Mappable
     required init?(_ map: Map) {
    }
     required init() {
    }

    func mapping(map: Map) {
        complaintTypeID <- map["complaintTypeID"]
        color <- map["color"]
        id <- map["id"]
        complaintTypeName <- map["complaintTypeName"]
        categoryName <- map["categoryName"]
        locationIsRequired <- map["locationIsRequired"]
        pictureRequired <- map["pictureRequired"]
        complaintList <- map["complaintList"]
        complaintCategoryID <- map["complaintCategoryID"]
    }
    // MARK: - functions to conform to Decodable
	 required init?(json: JSON) {
		self.complaintTypeID = "complaintTypeID" <~~ json
		self.color = "color" <~~ json
		self.id = "id" <~~ json
		self.complaintTypeName = "complaintTypeName" <~~ json
		self.categoryName = "categoryName" <~~ json
		self.locationIsRequired = "locationIsRequired" <~~ json
		self.pictureRequired = "pictureRequired" <~~ json
		self.complaintList = "complaintList" <~~ json
		self.complaintCategoryID = "complaintCategoryID" <~~ json
	}
}



//SWIFT SKELETON CLASS: AlertImageDTO
//Generated by Java2Swift on Sat Apr 23 10:25:46 SAST 2016

import Foundation
import Gloss
import ObjectMapper

class AlertImageDTO: Decodable, Mappable {

	// MARK: - Properties
	var alertImageID: Int?
	var dateUploaded: Int32?
	var dateTaken: Int32?
	var latitude: Double?
	var longitude: Double?
	var alertID: Int?
	var municipalityID: Int?
	var activeFlag: Bool?
	var url: String?
	var secureUrl: String?
	var signature: String?
	var eTag: String?
	var height: Int?
	var width: Int?
	var bytes: Int?

	// MARK: - functions to conform to ObjectMapper protocol Mappable
	required init?(_ map: Map) {
	}

	func mapping(map: Map) {
		alertImageID <- map["alertImageID"]
		dateUploaded <- map["dateUploaded"]
		dateTaken <- map["dateTaken"]
		latitude <- map["latitude"]
		longitude <- map["longitude"]
		alertID <- map["alertID"]
		municipalityID <- map["municipalityID"]
		activeFlag <- map["activeFlag"]
		url <- map["url"]
		secureUrl <- map["secureUrl"]
		signature <- map["signature"]
		eTag <- map["eTag"]
		height <- map["height"]
		width <- map["width"]
		bytes <- map["bytes"]
	}

	// MARK: - function to conform to Decodable
	required init?(json: JSON) {
		self.alertImageID = "alertImageID" <~~ json
		self.dateUploaded = "dateUploaded" <~~ json
		self.dateTaken = "dateTaken" <~~ json
		self.latitude = "latitude" <~~ json
		self.longitude = "longitude" <~~ json
		self.alertID = "alertID" <~~ json
		self.municipalityID = "municipalityID" <~~ json
		self.activeFlag = "activeFlag" <~~ json
		self.url = "url" <~~ json
		self.secureUrl = "secureUrl" <~~ json
		self.signature = "signature" <~~ json
		self.eTag = "eTag" <~~ json
		self.height = "height" <~~ json
		self.width = "width" <~~ json
		self.bytes = "bytes" <~~ json
	}
}

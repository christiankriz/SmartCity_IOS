

//SWIFT SKELETON CLASS: ComplaintUpdateStatusDTO
//Generated by Java2Swift on Sat Apr 23 10:25:46 SAST 2016

import Foundation
import Gloss
import ObjectMapper

class ComplaintUpdateStatusDTO: Decodable, Mappable {

	var customerOKFlag: Bool?
	var customerComment: String?
	var complaintUpdateStatusID: Int?
	var dateUpdated: Int32?
	var resolvedFlag: Bool?
	var remarks: String?
	var stringDate: String?
	var complaintID: Int?
	var id: Int?
	var status: String?

	required init?(_ map: Map) {
	}

	func mapping(map: Map) {
		customerOKFlag <- map["customerOKFlag"]
		customerComment <- map["customerComment"]
		complaintUpdateStatusID <- map["complaintUpdateStatusID"]
		dateUpdated <- map["dateUpdated"]
		resolvedFlag <- map["resolvedFlag"]
		remarks <- map["remarks"]
		stringDate <- map["stringDate"]
		complaintID <- map["complaintID"]
		id <- map["id"]
		status <- map["status"]
	}
	required init?(json: JSON) {
		self.customerOKFlag = "customerOKFlag" <~~ json
		self.customerComment = "customerComment" <~~ json
		self.complaintUpdateStatusID = "complaintUpdateStatusID" <~~ json
		self.dateUpdated = "dateUpdated" <~~ json
		self.resolvedFlag = "resolvedFlag" <~~ json
		self.remarks = "remarks" <~~ json
		self.stringDate = "stringDate" <~~ json
		self.complaintID = "complaintID" <~~ json
		self.id = "id" <~~ json
		self.status = "status" <~~ json
	}
}
